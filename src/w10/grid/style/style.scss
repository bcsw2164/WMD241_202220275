*,
*::after,
*::before {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-size: 18px;
  line-height: 150%;
  // 폰트같은경우는 body에서 잡아주는게 좋음(어차피 자식요소들에게 모두 적용되니가)
}

.section {
  padding-block: 24px;
}
.section > h2 {
  max-width: 960px;
  margin-inline: auto;
  margin-block: 0;
  padding-inline: 1.5rem;
  margin-bottom: 12px;
}

.container {
  max-width: 960px;
  margin-inline: auto;
  padding-inline: 24px;
  background-color: oklch(0.95 0.01 240);
}

.grid {
  display: grid;
  // 그리드는 기본적으로 부모에게 주는 속성

  &__item {
    &--nth {
      @for $i from 1 through 12 {
        &-#{$i} {
          background-color: oklch(0.9 0.05 $i * 30);
        }
      }
    }
  }

  &--opt-1 {
    grid-template-columns: 1fr 1fr 1fr;
    // grid-template-rows: 1fr 1fr 1fr 1fr;
    grid-auto-rows: 1fr; //1fr을 3개 넣지 않았지만 각 줄이 생길 때 마다 1fr씩
    // template과 auto 의 차이 : auto는 그다음줄로 뭔가 넘어가야할때 각각의 row에 어떤 규칙이 있게 할거냐를 지정해줌,
    column-gap: 24px;
    row-gap: 24px;
  }

  &--opt-2 {
    // grid-template-columns: repeat(몇번반복할거냐, 뭐라고쓰는걸반복해줘?);
    // grid-template-columns: repeat(3, 1fr);
    // grid-template-columns: 200px repeat(2, 1fr);
    //부모를 벗어남 ↓
    // grid-template-columns: repeat(3, minmax(100px, 1fr));
    // grid-template-columns: repeat(3, minmax(최소,최대));
    // 하나는 무조건 200px로
    // ↓↓↓↓↓↓↓↓↓↓↓↓부모를 벗어나지 않음↓↓↓↓↓↓↓↓↓↓↓↓
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    //최소사이즈200으로 설정, 200사이즈를 넘으려고하면 다음줄로 보내줌
    grid-auto-rows: 1fr;
    column-gap: 12px;
    row-gap: 24px;
    // fr은 최댓값 최솟값이 없음. 그래서 사이즈 지정을 해주지 않으면 얘도 끝없이 늘어남
  }
}
